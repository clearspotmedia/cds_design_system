<?php

/**
 * @file
 * Install and update hooks.
 */

/**
 * Implements hook_install().
 *
 * Adds necessary permissions to the following Microsites-specific roles:
 * - microsite-admin
 * - microsite-member
 * - microsite-outsider
 * - microsite-anonymous.
 */
function cds_design_system_install($is_syncing) {

  if ($is_syncing) {
    return;
  }

  $perms_to_add = [
    'microsite-admin' => [
      'create group_node:cds_design_system entity',
      'create group_node:cds_design_system relationship',
      'delete any group_node:cds_design_system entity',
      'delete any group_node:cds_design_system relationship',
      'delete own group_node:cds_design_system entity',
      'delete own group_node:cds_design_system relationship',
      'update any group_node:cds_design_system entity',
      'update any group_node:cds_design_system relationship',
      'update own group_node:cds_design_system entity',
      'update own group_node:cds_design_system relationship',
      'view group_node:cds_design_system entity',
      'view group_node:cds_design_system relationship',
      'view unpublished group_node:cds_design_system entity',
    ],
    'microsite-member' => [
      'create group_node:cds_design_system entity',
      'delete any group_node:cds_design_system entity',
      'delete any group_node:cds_design_system relationship',
      'delete own group_node:cds_design_system entity',
      'delete own group_node:cds_design_system relationship',
      'update any group_node:cds_design_system entity',
      'update any group_node:cds_design_system relationship',
      'update own group_node:cds_design_system entity',
      'update own group_node:cds_design_system relationship',
      'view group_node:cds_design_system entity',
      'view unpublished group_node:cds_design_system entity',
    ],
    'microsite-outsider' => [
      'view group_node:cds_design_system entity',
    ],
    'microsite-anonymous' => [
      'view group_node:cds_design_system entity',
    ],
  ];

  array_walk($perms_to_add, '_cds_design_system_update_group_perm');
}

/**
 * Appends given permissions to given Group role.
 */
function _cds_design_system_update_group_perm(array $more_perms, string $role): void {

  $role_perms = Drupal::service('entity_type.manager')->getStorage('group_role')->load($role);
  if (is_null($role_perms)) {
    return;
  }

  $existing_perms = $role_perms->getPermissions();
  $updated_perms  = array_unique([...$existing_perms, ...$more_perms]);
  $has_new_perm   = count($existing_perms) !== count($updated_perms);
  if ($has_new_perm) {
    $role_perms->grantPermissions($more_perms);
    $role_perms->save();
  }
}
